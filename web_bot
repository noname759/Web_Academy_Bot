import sqlite3
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext, CallbackQueryHandler

TOKEN = 'You_telegram_bot'

info_ru = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Web Academy TJ!."
info_tj = "–•—É—à –æ–º–∞–¥–µ–¥ –±–∞ Web Academy TJ!."

about_info = {
    'ru': (
        "–ù–∞—à —É—á–µ–±–Ω—ã–π —Ü–µ–Ω—Ç—Ä ‚Äî —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è! –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫—É—Ä—Å—ã –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π: "
        "–æ—Ç –Ω–æ–≤–∏—á–∫–æ–≤ –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤.\n\n"
        "‚Ä¢ –ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º?\n"
        "  - –û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: –Ω–∞—á–Ω–∏—Ç–µ —Å –æ—Å–Ω–æ–≤ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –∏–∑—É—á–∞–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏.\n"
        "  - –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞: —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã.\n"
        "  - –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞: —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iOS –∏ Android.\n"
        "  - –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ: –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä AI.\n"
        "  - –ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –∑–∞—â–∏—â–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–∏—Å—Ç–µ–º—ã.\n\n"
        "‚Ä¢ –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?\n"
        "  - –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã: –º—ã —Å–ª–µ–¥–∏–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏ –æ—Ç—Ä–∞—Å–ª–∏.\n"
        "  - –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –º–µ—Ç–æ–¥—ã.\n"
        "  - –°–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤: –æ–±–º–µ–Ω–∏–≤–∞–π—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º –∏ –∑–Ω–∞–Ω–∏—è–º–∏ —Å –¥—Ä—É–≥–∏–º–∏ —É—á–µ–Ω–∏–∫–∞–º–∏.\n\n"
        "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–≤–æ—ë –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!"
    ),
    'tj': (
        "–ú–∞—Ä–∫–∞–∑–∏ —Ç–∞“≥—Å–∏–ª–æ—Ç–∏ –º–æ ‚Äî –∏–Ω –º–∞–∫–æ–Ω–µ, –∫–∏ “≥–∞—Ä –∫–∞—Å –º–µ—Ç–∞–≤–æ–Ω–∞–¥ –º–∞—Å—Ç–µ—Ä–∏ –±–∞—Ä–Ω–æ–º–∞—Å–æ–∑”£ —à–∞–≤–∞–¥! –ú–æ –∫—É—Ä—Å“≥–æ—Ä–æ –±–∞—Ä–æ–∏ “≥–∞–º–∞ —Å–∞—Ç“≥“≥–æ "
        "–ø–µ—à–Ω–∏“≥–æ–¥ –º–µ–∫—É–Ω–µ–º: –∞–∑ —à–æ–≥–∏—Ä–¥–æ–Ω–∏ –Ω–∞–≤“∑–æ–æ–Ω —Ç–æ –±–∞—Ä–Ω–æ–º–∞—Å–æ–∑–æ–Ω–∏ –º—É–æ—Å–∏—Ä.\n\n"
        "‚Ä¢ –ú–æ —á”£ –ø–µ—à–Ω–∏“≥–æ–¥ –º–µ–∫—É–Ω–µ–º?\n"
        "  - –ê—Å–æ—Å“≥–æ–∏ –±–∞—Ä–Ω–æ–º–∞—Å–æ–∑”£: –ê–∑ –∞—Å–æ—Å“≥–æ –æ“ì–æ–∑ –∫—É–Ω–µ–¥ –≤–∞ —Ç–∞–¥—Ä–∏“∑–∞–Ω –∫–æ–Ω—Ü–µ–ø—Å–∏—è“≥–æ–∏ –º—É—Ä–∞–∫–∫–∞–±—Ä–æ –æ–º”Ø–∑–µ–¥.\n"
        "  - –ë–∞—Ä–Ω–æ–º–∞—Å–æ–∑–∏–∏ –≤–µ–±: –í–µ–±—Å–∞–π—Ç“≥–æ–∏ –∑–µ–±–æ –≤–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∏—Ä–æ —Å–æ–∑–µ–¥.\n"
        "  - –ë–∞—Ä–Ω–æ–º–∞—Å–æ–∑–∏–∏ –º–æ–±–∏–ª”£: –ë–∞—Ä–Ω–æ–º–∞“≥–æ –±–∞—Ä–æ–∏ iOS –≤–∞ Android —Ç–∞“≥–∏—è –∫—É–Ω–µ–¥.\n"
        "  - –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–∏ —Å—É–Ω—ä”£ –≤–∞ –æ–º”Ø–∑–∏—à–∏ –º–æ—à–∏–Ω”£: –ë–∞ “∑–∞“≥–æ–Ω AI –æ—à–Ω–æ —à–∞–≤–µ–¥.\n"
        "  - –ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –î–∞—Ç“≥–æ –≤–∞ —Å–∏—Å—Ç–µ–º–∞“≥–æ—Ä–æ –º—É“≥–æ—Ñ–∏–∑–∞—Ç –∫—É–Ω–µ–¥.\n\n"
        "‚Ä¢ –ß–∞—Ä–æ –º–æ—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥?\n"
        "  - –ë–∞—Ä–Ω–æ–º–∞“≥–æ–∏ –∞–∫—Ç—É–∞–ª”£: –ú–æ –ø–∞–π–≥–∏—Ä–∏–∏ —Ç—Ä–µ–Ω–¥“≥–æ–∏ –æ—Ö–∏—Ä–∏–Ω–∏ —Å–æ“≥–∞ –º–µ–∫—É–Ω–µ–º.\n"
        "  - –ú–µ—Ç–æ–¥–∞–∏ –∏–Ω–Ω–æ–≤–∞—Ç—Å–∏–æ–Ω”£: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –≤–∞ —É—Å—É–ª“≥–æ–∏ –º—É–æ—Å–∏—Ä—Ä–æ –∏—Å—Ç–∏—Ñ–æ–¥–∞ –º–µ–±–∞—Ä–µ–º.\n"
        "  - “∂–æ–º–µ–∞–∏ –∞—ä–∑–æ—ë–Ω–∏ –º–æ–Ω–∞–Ω–¥: –ë–æ –¥–∏–≥–∞—Ä —à–æ–≥–∏—Ä–¥–æ–Ω —Ç–∞“∑—Ä–∏–±–∞ –≤–∞ –¥–æ–Ω–∏—à –º—É–±–æ–¥–∏–ª–∞ –∫—É–Ω–µ–¥.\n\n"
        "–ë–∞ –º–æ –ø–∞–π–≤–∞—Å—Ç —à–∞–≤–µ–¥ –≤–∞ –∏–º—Ä”Ø–∑ —à–µ–Ω–≥–∏–∏ –±–∞—Ä–Ω–æ–º–∞—Å–æ–∑–∏—Ä–æ —à—É—Ä”Ø—ä –∫—É–Ω–µ–¥!"
    )
}


courses_info = {
    'python': {
        'ru': "–ö—É—Ä—Å –ø–æ Python –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è...",
        'tj': "–ö—É—Ä—Å–∏ Python –∞—Å–æ—Å“≥–æ–∏ –±–∞—Ä–Ω–æ–º–∞—Å–æ–∑”£..."
    },
    'ios': {
        'ru': "–ö—É—Ä—Å –ø–æ iOS —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...",
        'tj': "–ö—É—Ä—Å–∏ —Ä—É—à–¥–∏ iOS —Ç–∞“≥–∏—è–∏ –±–∞—Ä–Ω–æ–º–∞“≥–æ..."
    },
    'android': {
        'ru': "–ö—É—Ä—Å –ø–æ Android —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...",
        'tj': "–ö—É—Ä—Å–∏ —Ä—É—à–¥–∏ Android —Ç–∞“≥–∏—è–∏ –±–∞—Ä–Ω–æ–º–∞“≥–æ..."
    },
    'python-django': {
        'ru': "Python-Django –∏–∑—É—á–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ Django –Ω–∞ —è–∑—ã–∫–µ Python.",
        'tj': "Python-Django —á”£ –≥—É–Ω–∞ —Å–æ—Ö—Ç–∞–Ω–∏ –≤–µ–±-–±–∞—Ä–Ω–æ–º–∞“≥–æ—Ä–æ –±–æ –∏—Å—Ç–∏—Ñ–æ–¥–∞ –∞–∑ —á–∞“≥–æ—Ä—á”Ø–±–∞–∏ Django –¥–∞—Ä Python –º–µ–æ–º”Ø–∑–∞–¥."
    },
    'java-script': {
        'ru': "JavaScript –∏–∑—É—á–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö, –∞ —Ç–∞–∫–∂–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.",
        'tj': "JavaScript —ç“∑–æ–¥–∏ —É–Ω—Å—É—Ä“≥–æ–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤”£ –≤–∞ –¥–∏–Ω–∞–º–∏–∫”£ –¥–∞—Ä —Å–∞“≥–∏—Ñ–∞“≥–æ–∏ –≤–µ–±, –∏–Ω—á—É–Ω–∏–Ω —Ç–∞“≥–∏—è–∏ –±–∞—Ä–Ω–æ–º–∞“≥–æ–∏ –≤–µ–±—Ä–æ –º–µ–æ–º”Ø–∑–∞–¥."
    },
}

contact_info = {
    'ru': (
        "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å—ã!\n"
        "–¢–µ–ª–µ—Ñ–æ–Ω: +992 98755165\n"
        "–ù–∞—à –∞–¥—Ä–µ—Å: –≥. –î—É—à–∞–Ω–±–µ\n"
        "–ù–∞—à–∏ —Å–æ—Ü-—Å–µ—Ç–∏:"
    ),
    'tj': (
        "–õ—É—Ç—Ñ–∞–Ω –±–æ –º–æ —Ç–∞–º–æ—Å –≥–∏—Ä–µ–¥, –∫–∏ –º–∞—ä–ª—É–º–æ—Ç–∏ –∏–ª–æ–≤–∞–≥”£ –≤–∞ –±–∞ –∫—É—Ä—Å“≥–æ —à–æ–º–∏–ª —à–∞–≤–µ–¥!\n"
        "–¢–µ–ª–µ—Ñ–æ–Ω: +992 98755165\n"
        "–°—É—Ä–æ“ì–∞–∏ –º–æ: —à–∞“≥—Ä–∏ –î—É—à–∞–Ω–±–µ\n"
        "–®–∞–±–∞–∫–∞“≥–æ–∏ –∏“∑—Ç–∏–º–æ–∏–∏ –º–æ:"
    )
}

COURSES_PER_PAGE = 3  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É—Ä—Å–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ

def init_db():
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS users (user_id INTEGER PRIMARY KEY, language TEXT)''')
    conn.commit()
    conn.close()

def start(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data='ru'), InlineKeyboardButton("–¢–æ“∑–∏–∫”£ üáπüáØ", callback_data='tj')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    photo_path = 'photo.jpg'
    
    try:
        with open(photo_path, 'rb') as photo:
            message = update.message.reply_photo(photo=photo, caption=info_ru, reply_markup=reply_markup)
            context.user_data['message_id'] = message.message_id
            context.user_data['state'] = 'language'
    except FileNotFoundError:
        update.message.reply_text("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()  # –£–±–∏—Ä–∞–µ–º –∫—Ä—É–∂–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏

    user_language = query.data
    user_id = query.from_user.id

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute('INSERT OR REPLACE INTO users (user_id, language) VALUES (?, ?)', (user_id, user_language))
    conn.commit()
    conn.close()

    if user_language in ['ru', 'tj']:
        context.user_data['language'] = user_language
        show_main_menu(query, context)
    elif user_language.startswith('page_'):
        page_number = int(user_language.split('_')[1])
        show_courses(query, context, page_number)
    elif user_language == 'courses':
        show_courses(query, context)
    elif user_language == 'contact':
        show_contact(query, context)
    elif user_language == 'about':
        show_about(query, context)
    elif user_language == 'phone':
        show_phone_number(query, context)
    elif user_language == 'main_menu':
        show_main_menu(query, context)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif user_language in courses_info:
        show_course_details(user_language, query, context)

def show_main_menu(query: Update, context: CallbackContext):
    user_language = context.user_data.get('language', 'ru')
    courses_btn = "–ö—É—Ä—Å—ã üìö" if user_language == 'ru' else "–ö—É—Ä—Å“≥–æ üìö"
    contact_btn = "–ö–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è" if user_language == 'ru' else "–ê–ª–æ“õ–∞“≥–æ ‚òéÔ∏è"
    about_btn = "–û –Ω–∞—Å ‚ÑπÔ∏è" if user_language == 'ru' else "–î–∞—Ä –±–æ—Ä–∞–∏ –º–æ ‚ÑπÔ∏è"

    keyboard = [
        [InlineKeyboardButton(courses_btn, callback_data='courses')],
        [InlineKeyboardButton(contact_btn, callback_data='contact')],
        [InlineKeyboardButton(about_btn, callback_data='about')],
    ]

    current_caption = info_ru if user_language == 'ru' else info_tj
    current_reply_markup = InlineKeyboardMarkup(keyboard)

    if context.user_data.get('message_id'):
        context.bot.edit_message_caption(
            chat_id=query.message.chat.id,
            message_id=context.user_data['message_id'],
            caption=current_caption,
            reply_markup=current_reply_markup
        )
    else:
        message = query.message.reply_caption(
            caption=current_caption,
            reply_markup=current_reply_markup
        )
        context.user_data['message_id'] = message.message_id

def show_courses(query: Update, context: CallbackContext, page: int = 0):
    user_language = context.user_data.get('language', 'ru')
    courses_keys = list(courses_info.keys())
    start_index = page * COURSES_PER_PAGE
    end_index = start_index + COURSES_PER_PAGE
    courses_page = courses_keys[start_index:end_index]

    if not courses_page:  # –ï—Å–ª–∏ –∫—É—Ä—Å–æ–≤ –Ω–µ—Ç –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        return

    courses_btns = []
    for course_key in courses_page:
        courses_btns.append(InlineKeyboardButton(course_key.capitalize(), callback_data=course_key))

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if start_index > 0:
        back_text = "–ù–∞–∑–∞–¥" if user_language == 'ru' else "–ë–æ–∑–≥–∞—à—Ç"
        nav_buttons.append(InlineKeyboardButton(back_text + " ‚óÄÔ∏è", callback_data=f'page_{page - 1}'))

    if end_index < len(courses_keys):
        next_text = "–î–∞–ª–µ–µ" if user_language == 'ru' else "–ú–∏–Ω–±–∞—ä–¥"
        nav_buttons.append(InlineKeyboardButton(next_text + " ‚ñ∂Ô∏è", callback_data=f'page_{page + 1}'))

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
    main_menu_btn = InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é" if user_language == 'ru' else "–ë–æ –∞–≤–≤–∞–ª", callback_data='main_menu')

    keyboard = [courses_btns, nav_buttons, [main_menu_btn]] if nav_buttons else [courses_btns, [main_menu_btn]]

    current_caption = "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:" if user_language == 'ru' else "–ö—É—Ä—Å –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥:"
    current_reply_markup = InlineKeyboardMarkup(keyboard)

    if context.user_data.get('message_id'):
        context.bot.edit_message_caption(
            chat_id=query.message.chat.id,
            message_id=context.user_data['message_id'],
            caption=current_caption,
            reply_markup=current_reply_markup
        )
    else:
        message = query.message.reply_caption(
            caption=current_caption,
            reply_markup=current_reply_markup
        )
        context.user_data['message_id'] = message.message_id



def show_course_details(course_key: str, query: Update, context: CallbackContext):
    user_language = context.user_data.get('language', 'ru')
    course_description = courses_info[course_key][user_language]

    # –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å"
    sign_up_btn = InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å" if user_language == 'ru' else "–ë–∞ –∫—É—Ä—Å –æ–±—É–Ω–∞ —à–∞–≤–µ–¥", url='https://docs.google.com/forms/d/e/1FAIpQLSePM4_GmSBkTgNRVboxaexIsO8m-aELVvYeAWvHviewformW-gqE2unBA/')

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º"
    back_to_courses_btn = InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—É—Ä—Å–∞–º" if user_language == 'ru' else "–ë–æ–∑–≥–∞—à—Ç –±–∞ –∫—É—Ä—Å“≥–æ", callback_data='courses')

    current_reply_markup = InlineKeyboardMarkup([[sign_up_btn], [back_to_courses_btn]])

    context.bot.edit_message_caption(
        chat_id=query.message.chat.id,
        message_id=context.user_data['message_id'],
        caption=course_description,
        reply_markup=current_reply_markup
    )

def show_contact(query: Update, context: CallbackContext):
    user_language = context.user_data.get('language', 'ru')

    # –¢–µ–∫—Å—Ç –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    contact_details = {
        'ru': (
            "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å—ã!\n"
            "–¢–µ–ª–µ—Ñ–æ–Ω: +992 98755165\n"
            "–ù–∞—à –∞–¥—Ä–µ—Å: –≥. –î—É—à–∞–Ω–±–µ\n"
            "–ù–∞—à–∏ —Å–æ—Ü-—Å–µ—Ç–∏:"
        ),
        'tj': (
            "–õ—É—Ç—Ñ–∞–Ω –±–æ –º–æ —Ç–∞–º–æ—Å –≥–∏—Ä–µ–¥, –∫–∏ –º–∞—ä–ª—É–º–æ—Ç–∏ –∏–ª–æ–≤–∞–≥”£ –≤–∞ –±–∞ –∫—É—Ä—Å“≥–æ —à–æ–º–∏–ª —à–∞–≤–µ–¥!\n"
            "–¢–µ–ª–µ—Ñ–æ–Ω: +992 98755165\n"
            "–°—É—Ä–æ“ì–∞–∏ –º–æ: —à–∞“≥—Ä–∏ –î—É—à–∞–Ω–±–µ\n"
            "–®–∞–±–∞–∫–∞“≥–æ–∏ –∏“∑—Ç–∏–º–æ–∏–∏ –º–æ:"
        )
    }

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π
    instagram_btn = InlineKeyboardButton("Instagram", url='https://www.instagram.com/technohub_dushanbe?igsh=MWE2dWN1cjkzemY2MA==')
    telegram_btn = InlineKeyboardButton("Telegram", url='https://t.me/webacademychannel')
    back_to_main_btn = InlineKeyboardButton(
        "–ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é" if user_language == 'ru' else "–ë–∞—Ä–≥–∞—à—Ç –±–æ –∞–≤–≤–∞–ª", callback_data='main_menu'
    )

    # –°–±–æ—Ä–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = [[instagram_btn, telegram_btn], [back_to_main_btn]]
    current_reply_markup = InlineKeyboardMarkup(keyboard)

    # –¢–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
    current_caption = contact_details[user_language]

    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º edit_message_caption –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        context.bot.edit_message_caption(
            chat_id=query.message.chat.id,
            message_id=context.user_data['message_id'],
            caption=current_caption,
            reply_markup=current_reply_markup
        )
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

def show_about(query: Update, context: CallbackContext):
    user_language = context.user_data.get('language', 'ru')
    current_caption = about_info[user_language]
    current_reply_markup = InlineKeyboardMarkup([[InlineKeyboardButton("–ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='main_menu')]])

    context.bot.edit_message_caption(
        chat_id=query.message.chat.id,
        message_id=context.user_data['message_id'],
        caption=current_caption,
        reply_markup=current_reply_markup
    )


def show_phone_number(query: Update, context: CallbackContext):
    user_language = context.user_data.get('language', 'ru')
    phone_info = contact_info[user_language]
    current_reply_markup = InlineKeyboardMarkup([[InlineKeyboardButton("–ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='main_menu')]])

    context.bot.edit_message_caption(
        chat_id=query.message.chat.id,
        message_id=context.user_data['message_id'],
        caption=phone_info,
        reply_markup=current_reply_markup
    )

def main():
    init_db()
    updater = Updater(TOKEN)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(CallbackQueryHandler(button))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
